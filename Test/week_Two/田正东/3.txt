#include <unistd.h>
int execl(const char *path, const char *arg, ...)
int execv(const char *path, char *const argv[])
int execle(const char *path, const char *arg, ..., char *const envp[])
int execve(const char *path, char *const argv[], char *const envp[])
int execlp(const char *file, const char *arg, ...)
int execvp(const char *file, char *const argv[])
execv函数：通过路径名方式调用可执行文件作为新的进程映像。他的argv参数用来提供给main函数的argv参数。argv参数是一个以NULL结尾（最后一个元素必须是一个空指针）的字符串数组
execve函数：其中参数path是将要执行的程序的路径名，参数argv，envp与main函数的argv，envp对应。（argv和envp的大小都是有限制的，若他们容量和超过ARG_MAX定义的值会发生错误）
execl函数：该函数与execv函数用法类似，只是在传递argv参数时，每个命令行参数都声明为一个单独的参数，这些参数要以一个空指针作为结束
execle函数：与execl函数类似，只是要显示指定环境变量。环境变量位于命令行参数最后一个参数（空指针）之后
execvp函数：与execv函数类似，不同的是参数filename，该参数如果包含“/”，就相当于路径名；如果不包含“/”，函数就到PATH环境变量定义的目录中寻找可执行文件。
execlp函数：与execl函数类似，他们的区别和execvp与execv区别一样。
